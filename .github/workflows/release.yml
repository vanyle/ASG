name: Release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag"
        required: true
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  release-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v4
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-v2-${{ hashFiles('*.nimble') }}
          restore-keys: |
            ${{ runner.os }}-nimble-v2-
      - uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: "2.2.0"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: sudo apt-get install -y libluajit-5.1-dev
      - run: nimble install --depsOnly

      - run: nimble build -d:release -d:strip --opt:size
      - run: cp -r ./assets ./build
      - run: tar cvfz asg-${{ inputs.tag || github.ref_name }}-linux-amd64.tar.gz build/*

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          workdir: build
          # ref_name is the tag.
          title: "ASG-${{ inputs.tag || github.ref_name }}"
          tag: "${{ inputs.tag || github.ref_name }}"

      - uses: AButler/upload-release-assets@v3.0
        with:
          files: "*.tar.gz"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: "${{ inputs.tag || github.ref_name }}"

  release-windows:
    runs-on: windows-latest
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          release: false
          update: true
          msystem: MINGW64
          install: >-
            mingw-w64-x86_64-luajit
            mingw-w64-x86_64-gcc

      - run: echo "C:/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - uses: actions/checkout@v4

      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v4
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-v2-${{ hashFiles('*.nimble') }}
          restore-keys: |
            ${{ runner.os }}-nimble-v2-

      - uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: "2.2.0"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: nimble install --depsOnly
      - run: nimble build -d:release -d:strip --opt:size --passL:"-LC:/msys64/mingw64/lib"
      - run: cp -r ./assets ./build
      - run: tar cvfz asg-${{ inputs.tag || github.ref_name }}-windows-amd64.tar.gz build/*
      - uses: AButler/upload-release-assets@v3.0
        with:
          files: "*.tar.gz"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: "${{ inputs.tag || github.ref_name }}"
