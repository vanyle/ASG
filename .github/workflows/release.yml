name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag"
        required: true
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

env:
  CARGO_TERM_COLOR: always

jobs:
  release_linux:
    name: Release - Linux
    runs-on: ubuntu-latest
    container:
      image: messense/rust-musl-cross:x86_64-musl

    steps:
      - uses: actions/checkout@v4

      - name: Install GH CLI tool
        run: |
          (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
          && sudo mkdir -p -m 755 /etc/apt/keyrings \
                && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
                && cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
          && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          profile: stable
          target: x86_64-unknown-linux-musl

      - name: Build
        run: cargo build --target=x86_64-unknown-linux-musl --release

      - name: Move binary and assets to build directory
        run: cp -r ./assets ./build && cp ./target/x86_64-unknown-linux-musl/release/asg ./build

      - name: Remove .gitkeep
        run: rm -f ./build/.gitkeep

      - name: Archive build directory
        run: tar cvfz asg-${{ inputs.tag || github.ref_name }}-linux-amd64.tar.gz build/*

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          workdir: build
          # ref_name is the tag.
          title: "ASG-${{ inputs.tag || github.ref_name }}"
          tag: "${{ inputs.tag || github.ref_name }}"
        # This can fail if the release already exists. Let's ignore that.
        continue-on-error: true

      - uses: AButler/upload-release-assets@v3.0
        with:
          files: "*.tar.gz"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: "${{ inputs.tag || github.ref_name }}"

  release_windows:
    name: Release - Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build
        run: cargo build --release

      - name: Move binary and assets to build directory
        run: cp -r ./assets ./build && cp ./target/release/asg.exe ./build

      - name: Remove .gitkeep
        run: rm ./build/.gitkeep

      - name: Archive build directory
        run: tar cvfz asg-${{ inputs.tag || github.ref_name }}-windows-amd64.tar.gz build/*

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          workdir: build
          # ref_name is the tag.
          title: "ASG-${{ inputs.tag || github.ref_name }}"
          tag: "${{ inputs.tag || github.ref_name }}"
        # This can fail if the release already exists. Let's ignore that.
        continue-on-error: true

      - uses: AButler/upload-release-assets@v3.0
        with:
          files: "*.tar.gz"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: "${{ inputs.tag || github.ref_name }}"

  release_macos:
    name: Release - MacOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build
        run: cargo build --release

      - name: Move binary and assets to build directory
        run: cp -r ./assets ./build && cp ./target/release/asg ./build

      - name: Remove .gitkeep
        run: rm -f ./build/.gitkeep

      - name: Archive build directory
        run: tar cvfz asg-${{ inputs.tag || github.ref_name }}-macos-amd64.tar.gz build/*

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          workdir: build
          # ref_name is the tag.
          title: "ASG-${{ inputs.tag || github.ref_name }}"
          tag: "${{ inputs.tag || github.ref_name }}"
        # This can fail if the release already exists. Let's ignore that.
        continue-on-error: true

      - uses: AButler/upload-release-assets@v3.0
        with:
          files: "*.tar.gz"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: "${{ inputs.tag || github.ref_name }}"
